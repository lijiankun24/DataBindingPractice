<?xml version="1.0" encoding="utf-8"?>
<layout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:add="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">

    <data>

        <import type="android.view.View"/>

        <import type="android.databinding.ObservableMap"/>

        <import type="android.databinding.ObservableList"/>

        <variable
            name="observablePresenter"
            type="com.lijiankun24.databindingpractice.observable.ObservablePresenter"/>

        <variable
            name="student"
            type="com.lijiankun24.databindingpractice.data.model.Student"/>

        <variable
            name="observableTeacher"
            type="com.lijiankun24.databindingpractice.data.model.ObservableTeacher"/>

        <variable
            name="observableMap"
            type="ObservableMap&lt;String, Object>"/>

        <variable
            name="observableList"
            type="ObservableList&lt;String>"/>
    </data>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:orientation="vertical"
        tools:context="com.lijiankun24.databindingpractice.observable.ObservableActivity">

        <include
            android:id="@+id/include_toolbar"
            layout="@layout/view_toolbar"/>

        <TextView
            style="@style/SubTextViewStyle"
            android:text="@string/observable_observable_fields_title"/>

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="horizontal">

            <CheckBox
                android:id="@+id/checkbox"
                android:layout_width="48dp"
                android:layout_height="48dp"
                android:checked="@{student.isAdult}"
                android:onCheckedChanged="@{(button, b) -> observablePresenter.changeStudentIsAdult(b, student)}"/>

            <TextView
                android:layout_width="match_parent"
                android:layout_height="40dp"
                android:layout_gravity="center_vertical"
                android:background="@{@android:color/holo_blue_light}"
                android:gravity="center"
                android:text="@string/observable_fields"
                android:textColor="@android:color/black"
                android:visibility="@{student.isAdult ? View.VISIBLE : View.INVISIBLE}"/>

        </LinearLayout>

        <View style="@style/LineStyle"/>

        <EditText
            android:id="@+id/et_student_mobile"
            android:layout_width="match_parent"
            android:layout_height="48dp"
            android:hint="@string/observable_input_mobile_hint"
            android:text="@{student.mobile.get()}"/>

        <View style="@style/LineStyle"/>

        <TextView
            style="@style/TextViewStyle"
            android:text="@{String.format(@string/observable_student_mobile, student.mobile)}"/>

        <View style="@style/LineStyle"/>

        <TextView
            style="@style/SubTextViewStyle"
            android:text="@string/observable_observable_objects_title"/>

        <include
            android:id="@+id/include_view1"
            layout="@layout/view_include1"
            add:observableTeacher="@{observableTeacher}"/>

        <TextView
            style="@style/SubTextViewStyle"
            android:text="@string/observable_observable_collections_title"/>

        <View style="@style/LineStyle"/>

        <TextView
            style="@style/TextViewStyle"
            android:text='@{@string/observable_observable_collections_map(observableMap["firstName"])}'/>

        <View style="@style/LineStyle"/>

        <TextView
            style="@style/TextViewStyle"
            android:text='@{@string/observable_observable_collections_list(observableList[0])}'/>

        <View style="@style/LineStyle"/>
    </LinearLayout>
</layout>
